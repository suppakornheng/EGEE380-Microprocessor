,,,                PROCESSOR PIC16F628
,,,                #include <P16F628.INC>
00002007,3F4A,,                __CONFIG        _CP_OFF & _MCLRE_OFF & _HS_OSC & _LVP_OFF & _WDT_OFF
,,,
,,,                cblock  0x20
,,,                        temp
,,,                        temp1
,,,                        count
,,,                        count0
,,,                        count1
,,,                        count2
,,,                endc
,,,
00000000,,,                ORG 0x00                ;reset vector
00000000,2801,,                goto    main    ;vector to main program
,,,
,,,
00000001,,main:,main:
00000001,204B,,                call    Init
,,,
00000002,,L1:,L1:
00000002,1805,,                btfsc   PORTA,0         ; is UP pressed?
00000003,2805,,                goto    L2
,,,
00000004,0AA0,,                incf    temp,f
,,,
00000005,1885,L2:,L2:             btfsc   PORTA,1         ; is DOWN pressed?
00000006,2808,,                goto    L3
,,,
00000007,03A0,,                decf    temp,f
,,,
00000008,3010,L3,L3              movlw   .16
00000009,0220,,                subwf   temp,w
0000000A,1D03,,                btfss   STATUS,Z        ;check if temp=16?
0000000B,280E,,                goto    L4              ;No,check zero
,,,
0000000C,01A0,,                clrf    temp            ;Yes, clear 'temp' back to zero
0000000D,2815,,                goto    L5                      ;Repeat the infinite loop
,,,
0000000E,,L4:,L4:
0000000E,30FF,,                movlw   .255
0000000F,0220,,                subwf   temp,w
00000010,1D03,,                btfss   STATUS,Z        ;check if temp=255?
00000011,2815,,                goto    L5                      ;No, go back and do it again
,,,
00000012,300F,,                movlw   .15
00000013,00A0,,                movwf   temp            ;yes, set temp = 16
00000014,2815,,                goto    L5                      ;Repeat the infinite loop
,,,
,,,
00000015,0820,L5:,L5:             movf    temp,w          ;use [Temp] to call 'Table7seg'
00000016,201B,,                call    Table7seg
00000017,0086,,                movwf   PORTB           ;Send the obtain 7 seg pattern to PORTB
,,,
00000018,30FA,,                movlw   .250
00000019,202D,,                call    DelayMS
,,,
0000001A,2802,,                goto    L1
,,,
,,,
,,,;Loopup table for 7segments LED Patterns
0000001B,,Table7seg:,Table7seg:
0000001B,0782,,                addwf   PCL,F
,,,                ;Segments       .GFEDBA
0000001C,343F,,                retlw   B'00111111'             ;Number0
0000001D,3406,,                retlw   B'00000110'             ;Number1
0000001E,345B,,                retlw   B'01011011'             ;Number2
0000001F,344F,,                retlw   B'01001111'             ;Number3
00000020,3466,,                retlw   B'01100110'             ;Number4
00000021,346D,,                retlw   B'01101101'             ;Number5
00000022,347D,,                retlw   B'01111101'             ;Number6
00000023,3407,,                retlw   B'00000111'             ;Number7
00000024,347F,,                retlw   B'01111111'             ;Number8
00000025,346F,,                retlw   B'01101111'             ;Number9
00000026,3477,,                retlw   B'01110111'             ;A
00000027,347C,,                retlw   B'01111100'             ;B
,,,                ;retlw  B'01011000'             ;C little
00000028,3439,,                retlw   B'00111001'             ;C big
00000029,345E,,                retlw   B'01011110'             ;D
0000002A,3479,,                retlw   B'01111001'             ;E
0000002B,3471,,                retlw   B'01110001'             ;F
0000002C,3480,,                retlw   B'10000000'             ;dot-point
,,,
0000002D,,DelayMS:,DelayMS:
0000002D,00A5,,                movwf   count2
0000002E,0AA5,,                incf    count2,f
0000002F,0BA5,,                decfsz  count2,f
00000030,2832,,                goto    $+2
00000031,2834,,                goto    $+3
00000032,2035,,                call    Delay1MS
00000033,282F,,                goto    $-4
00000034,0008,,                return
,,,
00000035,,Delay1MS:,Delay1MS:
00000035,3032,,                movlw   .50                             ; 1 cyc
00000036,00A4,,                movwf   count1                  ; 1 cyc
00000037,,outterloop:,outterloop:
00000037,3005,,                movlw   .5                              ; 1 cyc * count1
00000038,0000,,                nop                                             ; 1 cyc * count1
00000039,00A3,,                movwf   count0                  ; 1 cyc * count1
0000003A,,innerloop:,innerloop:
0000003A,0BA3,,                decfsz  count0,F        ; 1 cyc * count1 * count0
0000003B,283A,,                goto    innerloop               ; 2 cyc * count1 * count0
0000003C,0BA4,,                decfsz  count1,F        ; 1 cyc * count1
0000003D,2837,,                goto    outterloop              ; 2 cyc * count1
0000003E,0008,,                return                                  ; 1 cyc
,,,                ; total = 3 + (6+3.count0).count1
,,,                ; count0 = 5 , count1 = 50, total = 1053 cyc
,,,
,,,; Time delay subroutine for 1.[W] seconds by calling DelayMS subroutine
0000003F,,DelayS:,DelayS:
0000003F,00A1,,                movwf   temp1
00000040,,delays_1:,delays_1:
00000040,30FA,,                movlw   .250
00000041,202D,,                call    DelayMS
00000042,30FA,,                movlw   .250
00000043,202D,,                call    DelayMS
00000044,30FA,,                movlw   .250
00000045,202D,,                call    DelayMS
00000046,30FA,,                movlw   .250
00000047,202D,,                call    DelayMS
00000048,0BA1,,                decfsz  temp1,f
00000049,2840,,                goto    delays_1
0000004A,0008,,                return
,,,
0000004B,,Init:,Init:
0000004B,3007,,                movlw   .7
0000004C,1283 1303,,                banksel CMCON
0000004E,009F,,                movwf   CMCON           ; Disable analog comparator
0000004F,1683 1303,,                banksel TRISB
00000051,3000,,                movlw   0x00
00000052,0086,,                movwf   TRISB           ; Set PORTB as output ports
00000053,30FF,,                movlw   0xFF
00000054,0085,,                movwf   TRISA           ; Set PORTA as input ports
00000055,1283 1303,,                banksel PORTB
00000057,0186,,                clrf    PORTB
00000058,01A0,,                clrf    temp
00000059,0008,,                return
,,,
,,,                END
