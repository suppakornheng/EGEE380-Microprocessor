,,,                PROCESSOR PIC16F628
,,,                #include <P16F628.INC>
00002007,3F4A,,                __CONFIG        _CP_OFF & _MCLRE_OFF & _HS_OSC & _LVP_OFF & _WDT_OFF
,,,
,,,                cblock  0x20
,,,                        temp
,,,                        INT_mS
,,,                        TESTTTT
,,,                        temp1
,,,                        count
,,,                        count0
,,,                        count1
,,,                        count2
,,,                        w_temp
,,,                        OPTION_REG_temp
,,,                        STATUS_temp
,,,                endc
,,,
00000000,,,                ORG 0x00                ;reset vector
00000000,2805,,                goto    main    ;vector to main program
,,,
00000004,,,                ORG     0x04            ;interrupt vector
00000004,2807,,                goto    ISR             ;exit Interrupt Service Routine
,,,
,,,
00000005,,main:,main:
00000005,202D,,                call    Init
00000006,2806,,                goto    $
,,,
,,,;---interrupt---
,,,;clock 4MHz, 1cycle=1uS
,,,;ISR every 200mS -> 200,000 cycle
,,,; 200,000/x < 256 -> x > 200,000/256
,,,; 256-(1000/4)= 256-250 = 6
,,,
00000007,,ISR:,ISR:
00000007,110B,,                bcf             INTCON,T0IF             ; clear Timer0 interrupt flag
00000008,3006,,                movlw   .6
00000009,0081,,                movwf   TMR0                    ; reload for another 100uS period
,,,
0000000A,0AA1,,                incf    INT_mS,f
0000000B,30C8,,                movlw   .200
0000000C,0221,,                subwf   INT_mS,w
0000000D,1903,,                btfsc   STATUS,Z        ;check if INT_mS=200?
0000000E,2010,,                call    L1                      ;yes
,,,
0000000F,0009,,                RETFIE
,,,
,,,
00000010,0AA0,L1:,L1:             incf    temp,f
,,,
00000011,3010,,                movlw   .16
00000012,0220,,                subwf   temp,w
00000013,1903,,                btfsc   STATUS,Z        ;check if temp=16?
00000014,01A0,,                clrf    temp            ;Yes, clear 'temp' back to zero
,,,
00000015,0820,,                movf    temp,w          ;use [Temp] to call 'Table7seg'
00000016,201B,,                call    Table7seg
00000017,00A2,,                movwf   TESTTTT
00000018,0086,,                movwf   PORTB           ;Send the obtain 7 seg pattern to PORTB
00000019,01A1,,                clrf    INT_mS
,,,
0000001A,0008,,                return
,,,
,,,
,,,;Loopup table for 7segments LED Patterns
0000001B,,Table7seg:,Table7seg:
0000001B,0782,,                addwf   PCL,F
,,,                ;Segments       .GFEDBA
0000001C,343F,,                retlw   B'00111111'             ;Number0
0000001D,3406,,                retlw   B'00000110'             ;Number1
0000001E,345B,,                retlw   B'01011011'             ;Number2
0000001F,344F,,                retlw   B'01001111'             ;Number3
00000020,3466,,                retlw   B'01100110'             ;Number4
00000021,346D,,                retlw   B'01101101'             ;Number5
00000022,347D,,                retlw   B'01111101'             ;Number6
00000023,3407,,                retlw   B'00000111'             ;Number7
00000024,347F,,                retlw   B'01111111'             ;Number8
00000025,346F,,                retlw   B'01101111'             ;Number9
00000026,3477,,                retlw   B'01110111'             ;A
00000027,347C,,                retlw   B'01111100'             ;B
,,,                ;retlw  B'01011000'             ;C little
00000028,3439,,                retlw   B'00111001'             ;C big
00000029,345E,,                retlw   B'01011110'             ;D
0000002A,3479,,                retlw   B'01111001'             ;E
0000002B,3471,,                retlw   B'01110001'             ;F
0000002C,3480,,                retlw   B'10000000'             ;dot-point
,,,
,,,
0000002D,,Init:,Init:   ;---Port Config---
0000002D,1283 1303,,                banksel PORTB           ; select Bank0
0000002F,3007,,                movlw   .7
00000030,1283 1303,,                banksel CMCON           ; select Bank0 (CMCON อยู่ Bank0)
00000032,009F,,                movwf   CMCON           ; Disable analog comparator
00000033,1683 1303,,                banksel TRISB           ; select Bank1
00000035,0186,,                clrf    TRISB           ;
,,,                ;---End Port Config---
,,,                ;---Option Config---
00000036,1683 1303,,                banksel OPTION_REG      ;       select Bank1
00000038,3001,,                movlw   B'00000001'     ;       prescaler to TMR0 at rate 1:4
00000039,0081,,                movwf   OPTION_REG
,,,                ;---Interrupt Config---
0000003A,1283 1303,,                banksel PORTB           ;       select Bank0
0000003C,168B,,                bsf             INTCON,T0IE     ; enable timer0 interrupt
0000003D,110B,,                bcf             INTCON,T0IF     ; clear timer0 interrupt flag
0000003E,178B,,                bsf             INTCON,GIE      ; enable global interrupt *enable GIE should be the last
,,,                ;---End Interrupt Config---
,,,                ;---End Option Config---
0000003F,3006,,                movlw   .6              ; reload value for 1mS interrupt period
00000040,1283 1303,,                banksel PORTA           ; select Bank0
00000042,0081,,                movwf   TMR0            ; set TMR0 = 6
00000043,0186,,                clrf    PORTB
00000044,01A0,,                clrf    temp
00000045,01A1,,                clrf    INT_mS
00000046,0008,,                return
,,,
,,,                END
